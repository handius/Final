<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitcamp.mapper.ArtistMapper">
<select id="artistBoardExistenceCheck" parameterType="int" resultType="int">
	select count(*) from artist_board
	where member_no = #{member_no}
</select>
<select id="artistBoardInsertSeq" resultType="int">
	select artist_board_seq.nextval from dual
</select>
<select id="artistBoardInsert" parameterType="HashMap">
	insert into artist_board 
	values(#{artist_no}, #{member_no}, '안녕하세요 저희 페이지에 방문해주셔서 감사합니다.', '/resources/image/artistPageDefault.jpg', 0, 0, 1)
</select>
<select id="artistBoardDetailArtistInfo" parameterType="int" resultType="com.bitcamp.DTO.member.MemberDTO">
	select member.member_no, user_name, user_nick, user_email, user_address, user_id
	from member inner join artist_board
	on member.member_no = artist_board.member_no
	where artist_no = #{artist_no}
</select>
<select id="artistBoardDetailGet" parameterType="int" resultType="com.bitcamp.DTO.artist.ArtistBoardDTO">
	select artist_no, member_no, artist_board_title, artist_main_img, artist_count, artist_score, artist_board_status
	from artist_board
	where artist_no = #{artist_no}
</select>
<update id="artistBoardDetailCountUpdate" parameterType="int">
	update artist_board set 
    artist_count = artist_count+1
    where artist_no = #{artist_no}
</update>
<select id="artistBoardDetailProductListMaxCount" parameterType="String" resultType="int">
	select count(*)
	from list_board
	where list_status = 1 and list_artist like #{value}
</select>
<select id="artistBoardDetailProductListNo" parameterType="HashMap" resultType="int">
	select list_no
    from (select rownum as num , list_no
        from list_board
        where list_artist like #{user_id} and list_status = 1 and rownum <![CDATA[<]]>= #{end_sql}) 
    where num <![CDATA[>]]>= #{start_sql}
</select>
<select id="artistBoardDetailProductListImg" parameterType="int" resultType="String">
	select list_image_loc 
	from list_image_board 
	where list_no = #{list_no}
</select>
<select id="artistBoardDetailBuyReviewListMaxCount" parameterType="int" resultType="int">
	select count(*)
	from order_board inner join artist_board
	on order_board.member_no = artist_board.member_no
	inner join buy_review
	on order_board.order_no = buy_review.order_no
	inner join member
	on order_board.member_no = member.member_no
	where artist_no = #{artist_no} and buy_review_status = 1
</select>
<select id="artistBoardDetailBuyReviewList" parameterType="HashMap" resultType="com.bitcamp.DTO.productdetail.BuyReviewDTO">
	select num, e.*
    from (select rownum as num ,buy_review_date, buy_review_content, buy_review_image_loc, buy_review_score, buy_review_status ,order_board.list_no, list_title ,order_add_option, user_name
        from order_board inner join artist_board
        on order_board.member_no = artist_board.member_no
        inner join buy_review
        on order_board.order_no = buy_review.order_no
        inner join member
        on order_board.member_no = member.member_no
        inner join list_board
        on order_board.list_no = list_board.list_no
        where artist_no = #{artist_no} and buy_review_status = 1 and rownum <![CDATA[<]]>= #{end_sql}  
        order by buy_review_date desc) e
    where num <![CDATA[>]]>= #{start_sql}
</select>
<select id="artistRepInsertSeq" resultType="int">
	select artist_rep_seq.nextval from dual
</select>
<insert id="artistRepInsert" parameterType="com.bitcamp.DTO.artist.ArtistRepDTO">
	insert into artist_rep(artist_rep_no, artist_no, member_no, artist_rep_content, artist_rep_date)
	 values(#{artist_rep_no}, #{artist_no}, #{member_no}, #{artist_rep_content}, sysdate)
</insert>
<select id="artistRepInsertCheck" parameterType="int" resultType="int">
	select count(*) from artist_rep
	where artist_rep_no = #{artist_rep_no}
</select>
<select id="artistRepListMaxCount" parameterType="int" resultType="int">
	select count(*)
	from artist_rep
	where artist_no = #{artist_no}
</select>
<select id="artistRepList" parameterType="HashMap" resultType="com.bitcamp.DTO.artist.ArtistRepDTO">
	select num, e.* 
	from (select rownum as num, e2.*
   		from (select artist_rep_no, artist_rep.member_no, artist_rep_content, artist_rep_date, user_name
            from artist_rep inner join member
            on artist_rep.member_no = member.member_no
            where artist_no = #{artist_no}
            order by artist_rep_date desc) e2
        where rownum <![CDATA[<]]>= #{end_sql}) e
    where num <![CDATA[>]]>= #{start_sql}
</select>
<select id="artistBoardDetailModify" parameterType="com.bitcamp.DTO.artist.ArtistRepDTO">
	update artist_board set
		artist_main_img = #{artist_main_img}
		, artist_board_title = #{artist_board_title}
		where artist_no = #{artist_no}
</select>
<!-- 작가 리스트 시작 -->
<select id="artistListMaxCount" parameterType="String" resultType="int">
	select count(*) 
	from artist_board
	<if test="!_parameter.equals('ROLL_ADMIN')">
			where artist_board_status = 1
	</if>
</select>
<select id="artistListGet" parameterType="HashMap" resultType="com.bitcamp.DTO.artist.ArtistBoardDTO">
	select num, e1.*
	from (select rownum as num , e2.* 
    	  from (select artist_no, artist_board_title, artist_main_img, artist_score, artist_board_status, user_id, user_name
                from artist_board inner join member
                on artist_board.member_no = member.member_no
                <where>
                	<if test="!searchText != null || searchText.equals('')">
                	and user_name like '%' || #{searchText} || '%'
                	</if>
                	<if test="!user_authority.equals('ROLL_ADMIN')">
                	and artist_board_status = 1
                	</if>
                </where>
                <if test="listType.equals('인기순')">
                	order by artist_count desc
                </if>
                <if test="listType.equals('평점순')">
                	order by artist_score desc
                </if> 
                <if test="listType.equals('최신순')">
                	order by artist_no desc
                </if>  
                ) e2
          where rownum <![CDATA[<]]>= #{endSql} ) e1
    where num <![CDATA[>]]>= #{startSql}
</select>
<select id="artistListImgGet" parameterType="int" resultType="String">
	select list_image_loc
	from list_image_board
	where list_no = #{list_no}
</select>
<select id="artistListListNoGet" parameterType="String" resultType="int">
	select list_no
	from list_board
	where list_artist = #{value}
</select>
<!-- 작가 별점 계산 시작 -->
<select id="artistScoreBuyReviewArtistId" parameterType="int" resultType="String">
	select distinct list_artist
	from order_board inner join buy_review
	on order_board.order_no = buy_review.order_no
	inner join list_board
	on order_board.list_no = list_board.list_no
	where buy_review.order_no = #{order_no};
</select>
<select id="artistScoreListNoList" parameterType="String" resultType="int">
	select list_no
	from list_board
	where list_artist like #{value}
</select>
<select id="artistScoreBuyReviewScoreList" parameterType="int" resultType="int">
	select buy_review_score 
	from buy_review inner join order_board
	on buy_review.order_no = order_board.order_no
	where list_no = #{list_no}
</select>
<update id="artistScoreUpdate" parameterType="HashMap">
	update 
	(   select user_id, artist_score
    	from member inner join artist_board
    	on member.member_no = artist_board.member_no
    	where user_id like #{user_id}
	)
	set 
    artist_score = #{artist_score}

select * from artist_board;
</update>
</mapper>