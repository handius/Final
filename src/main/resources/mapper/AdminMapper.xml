<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bitcamp.mapper.AdminMapper">

	<!-- member -->
	<select id="getMemberCount" parameterType="Object" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		<where>
        	USER_STATUS = 1
			<include refid="search_where"></include>
        </where>
	</select>
	<select id="getMemberList" parameterType="Object"
							   resultType="com.bitcamp.DTO.member.MemberDTO">
		SELECT A.RNUM, A.*
		FROM (
			    SELECT MEMBER_NO, USER_ID, USER_PASSWORD,
			           USER_NAME, USER_NICK, USER_EMAIL,
					   USER_ADDRESS, USER_REGIDATE, USER_STATUS,
					   USER_CALL, USER_CERTKEY, USER_CERTSTATUS,
					   USER_FLATFORM, USER_AUTHORITY, ROWNUM AS RNUM
			    FROM MEMBER 
		        <where>
		        <![CDATA[
				ROWNUM <= #{endrow}
		        ]]>
		        	<include refid="search_where"></include>
                AND USER_STATUS = 1
		        </where>
		        ORDER BY USER_REGIDATE DESC
		     ) A
		<![CDATA[
		WHERE A.RNUM >= #{startrow} 
		]]>
	</select>
	<select id="getMemberDetail" parameterType="int" resultType="com.bitcamp.DTO.member.MemberDTO">
		SELECT MEMBER_NO, USER_ID, USER_PASSWORD,
			   USER_NAME, USER_NICK, USER_EMAIL,
			   USER_ADDRESS, USER_REGIDATE, USER_STATUS,
			   USER_CALL, USER_CERTKEY, USER_CERTSTATUS,
			   USER_FLATFORM, USER_AUTHORITY
		FROM MEMBER
		WHERE MEMBER_NO = #{memberno}
	</select>
	<update id="updateMemberRole" parameterType="Object">
		UPDATE MEMBER
		SET USER_AUTHORITY = #{auth}
		WHERE MEMBER_NO = #{no}
	</update>
	<insert id="insertRealAuthority" parameterType="Object">
		INSERT INTO AUTHORITY(AUTH_NO, MEMBER_NO, USER_AUTH)
		VALUES(AUTH_SEQ.NEXTVAL, #{no}, #{auth})
	</insert>
	
	<!-- qna -->
	<update id="updateMemberStatus" parameterType="int">
		UPDATE MEMBER
		SET USER_STATUS = 0
		WHERE MEMBER_NO = #{memberno}
	</update>
	<select id="getQuestionCount" parameterType="Object" resultType="int">
		SELECT COUNT(*)
		FROM CUSTOMER_QA_BOARD
		<where>
		QUESTION_DELETE_STATUS = 1	
		<include refid="qna_search"></include>
			<if test="member_no != null and member_no != 0">
				AND MEMBER_NO = #{member_no}
			</if>
		</where>
	</select>
	<select id="getQuestionList" parameterType="Object"
							     resultType="com.bitcamp.DTO.customerqaboard.CustomerQABoardDTO">
		SELECT A.RNUM, A.*
		FROM (
				SELECT QUESTION_NO, Q.MEMBER_NO, QUESTION_TITLE,
					   QUESTION_CONTENT, QUESTION_DATE, ANSWER_CONTENT,
					   ANSWER_STATUS, QUESTION_DELETE_STATUS, QUESTION_TYPE,
					   M.USER_NAME, ROWNUM AS RNUM
				FROM CUSTOMER_QA_BOARD Q JOIN MEMBER M
					 ON Q.MEMBER_NO = M.MEMBER_NO
		        <where>
		        <![CDATA[
				ROWNUM <= #{endrow}
		        ]]>
		        	<include refid="qna_search"></include>
				<if test="member_no != null and member_no != 0">
					AND Q.MEMBER_NO = #{member_no}
				</if>
				AND QUESTION_DELETE_STATUS = 1
		        </where>
		        ORDER BY QUESTION_DATE DESC
		     ) A
		<![CDATA[
		WHERE A.RNUM >= #{startrow} 
		]]>
	</select>
	<select id="getQnADetail" parameterType="int"
							  resultType="com.bitcamp.DTO.customerqaboard.CustomerQABoardDTO">
		SELECT QUESTION_NO, Q.MEMBER_NO, QUESTION_TITLE,
			   QUESTION_CONTENT, QUESTION_DATE, ANSWER_CONTENT,
			   ANSWER_STATUS, QUESTION_DELETE_STATUS, QUESTION_TYPE,
			   M.USER_NAME
		FROM CUSTOMER_QA_BOARD Q JOIN MEMBER M
			 ON Q.MEMBER_NO = M.MEMBER_NO
		WHERE QUESTION_NO = #{questionno}
	</select>
	<update id="deleteQuestion" parameterType="int">
		UPDATE CUSTOMER_QA_BOARD
		SET QUESTION_DELETE_STATUS = 0
		WHERE QUESTION_NO = #{questionno}
	</update>
	<update id="updateAnswerContent" parameterType="Object">
		UPDATE CUSTOMER_QA_BOARD
		SET ANSWER_CONTENT = #{answer_content},
			ANSWER_STATUS = '완료'
		WHERE QUESTION_NO = #{question_no}
	</update>
	<update id="modifyAnswerContent" parameterType="Object">
		UPDATE CUSTOMER_QA_BOARD
		SET ANSWER_CONTENT = #{content}
		WHERE QUESTION_NO = #{questionno}
	</update>
	<update id="deleteAllQuestion">
		UPDATE CUSTOMER_QA_BOARD
		SET QUESTION_DELETE_STATUS = 0
		WHERE QUESTION_NO = #{string}
	</update>
	
	<!-- new member -->
	<select id="getNewMemberList" parameterType="Object" resultType="com.bitcamp.VO.admin.NewMemberVO">
		SELECT A.RNUM, A.*
		FROM (
		      SELECT X.*, ROWNUM AS RNUM
		      FROM (
		            SELECT TO_CHAR(USER_REGIDATE, 'yyyy-MM-dd') AS join_date,  NVL(count(*), 0) AS join_count
		            FROM MEMBER
		            WHERE TO_CHAR(USER_REGIDATE, 'yyyy-MM') = #{tochar}
		            GROUP BY TO_CHAR(USER_REGIDATE, 'yyyy-MM-dd')
		           ) X
			  <![CDATA[
		      WHERE ROWNUM <= #{endrow}
			  ]]>
		     ) A
		<![CDATA[
		WHERE A.RNUM >= #{startrow}
		]]>
	</select>
	<select id="getNewMemberCount" parameterType="String" resultType="int">
        SELECT COUNT(X.JOIN_DATE)
        FROM (
              SELECT TO_CHAR(USER_REGIDATE, 'yyyy-MM-dd') AS join_date,  NVL(count(*), 0) AS join_count
              FROM MEMBER
              WHERE TO_CHAR(USER_REGIDATE, 'yyyy-MM') = #{tochar}
              GROUP BY TO_CHAR(USER_REGIDATE, 'yyyy-MM-dd')
             ) X
	</select>
	
	<!-- popular product -->
	<select id="getPopularProductCount" parameterType="String" resultType="int">
		SELECT COUNT(*) FROM LIST_BOARD
		WHERE TO_CHAR(LIST_DATE, 'YYYY-MM') = #{tochar}
	</select>
	<select id="getPopularProductList" parameterType="Object" resultType="com.bitcamp.DTO.Product.ListDTO">
		SELECT A.*, A.RNUM
		FROM (
           	  SELECT X.*, ROWNUM AS RNUM
              FROM (
                    SELECT LIST_NO, LIST_ARTIST, LIST_TITLE,
                           LIST_PRODUCT, LIST_CATEGORY, LIST_CONTENT,
                           LIST_BASE_PRICE, LIST_DATE, BUY_COUNT,
                           ISORDERED, ORDERED_CONTENT, LIST_STATUS
                    FROM LIST_BOARD
                    WHERE TO_CHAR(LIST_DATE, 'yyyy-MM') = #{tochar}
                    ORDER BY BUY_COUNT DESC, LIST_NO
                   ) X
			  <![CDATA[
              WHERE ROWNUM <= #{endrow}
			  ]]>
          ) A
		<![CDATA[
		WHERE A.RNUM >= #{startrow}
		]]>
	</select>
	
	<!-- main set -->
	<update id="updateMainImage" parameterType="Object">
		UPDATE MAIN_IMAGE
		SET MAIN_IMAGE_PATH = #{main_image_path},
			MAIN_IMAGE_LINK = #{main_image_link},
			MAIN_IMAGE_DATE = SYSDATE
		WHERE MAIN_IMAGE_NO = #{main_image_no}
	</update>
	<update id="updateMainImage2" parameterType="Object">
		UPDATE MAIN_IMAGE
		SET MAIN_IMAGE_PATH = #{main_image_path},
			MAIN_IMAGE_LINK = #{main_image_link},
			MAIN_IMAGE_DATE = SYSDATE
		WHERE MAIN_IMAGE_NO = #{main_image_no}
	</update>
	<select id="getProductCount" parameterType="Object" resultType="int">
		SELECT COUNT(*)
		FROM LIST_BOARD
		<where>
			<include refid="product_search"></include>
		</where>
	</select>
	<select id="getProductList" parameterType="Object" resultType="com.bitcamp.DTO.Product.ListDTO">
		SELECT A.RNUM, A.*
		FROM (
              SELECT LIST_NO, LIST_ARTIST, LIST_TITLE,
                     LIST_PRODUCT, LIST_CATEGORY, LIST_CONTENT,
                     LIST_BASE_PRICE, LIST_DATE, BUY_COUNT,
                     ISORDERED, ORDERED_CONTENT, LIST_STATUS,
                     ROWNUM AS RNUM
              FROM LIST_BOARD
		      <where>
		      <![CDATA[
			  ROWNUM <= #{endrow}
		      ]]>
		      <include refid="product_search"></include>
		      </where>
		     ) A
		<![CDATA[
		WHERE A.RNUM >= #{startrow} 
		]]>
	</select>
	<update id="updateProductemplate" parameterType="com.bitcamp.DTO.admin.MainViewDTO">
		UPDATE MAIN_VIEW
		<trim prefix="SET" suffixOverrides=",">
			<if test="main_view_use != null">
				MAIN_VIEW_USE = #{main_view_use},
			</if>
			<if test="main_view_name != null">
				MAIN_VIEW_NAME = #{main_view_name},
			</if>
			<if test="main_view_product != null">
				MAIN_VIEW_PRODUCT = #{main_view_product},
			</if>
		</trim>
		WHERE MAIN_VIEW_NO = #{main_view_no}
	</update>
	
	<!-- main -->
	<select id="getMainViewList" resultType="com.bitcamp.DTO.admin.MainViewDTO">
		SELECT MAIN_VIEW_NO, MAIN_VIEW_NAME,
			   MAIN_VIEW_USE, MAIN_VIEW_PRODUCT
		FROM MAIN_VIEW
		ORDER BY MAIN_VIEW_NO
	</select>
	<select id="getMainImageList" resultType="com.bitcamp.DTO.admin.MainImageDTO">
		SELECT MAIN_IMAGE_NO, MAIN_IMAGE_PATH, MAIN_IMAGE_DATE,
			   MAIN_IMAGE_LINK, MAIN_VIEW_NO
		FROM MAIN_IMAGE
		ORDER BY MAIN_IMAGE_NO
	</select>
	<select id="getMainProduct" parameterType="String" resultType="com.bitcamp.VO.admin.MainProductVO">
		SELECT P.LIST_NO, LIST_TITLE, LIST_BASE_PRICE, LIST_IMAGE_LOC
		FROM LIST_BOARD P JOIN LIST_IMAGE_BOARD I
		  ON P.LIST_NO = I.LIST_NO
		WHERE P.LIST_NO = #{string}
		AND ROWNUM = 1
	</select>
	
	<!-- search -->
  	<sql id="search_where">
		<if test="user_name != null and user_name != ''">
			AND USER_NAME LIKE '%' || #{user_name} || '%'
		</if>
		<if test="search_date != null and search_date != '0-0'">
			AND TO_CHAR(USER_REGIDATE, 'yyyy-MM') = #{search_date}
		</if>
		<if test="user_authority != null and user_authority != ''">
			<if test="user_authority == 'ROLE_SELLER'">
				AND USER_AUTHORITY = 'ROLE_SELLER'
			</if>
			<if test="user_authority == 'ROLE_MEMBER'">
				AND USER_AUTHORITY = 'ROLE_MEMBER'
			</if>
			<if test="user_authority == 'ROLE_USER'">
				AND USER_AUTHORITY = 'ROLE_USER'
			</if>
		</if>
  	</sql>
  	<sql id="qna_search">
		<if test="question_title != null and question_title != ''">
			AND QUESTION_TITLE LIKE '%' || #{question_title} || '%'
		</if>
		<if test="question_type != null and question_type != ''">
			AND QUESTION_TYPE = #{question_type}
		</if>
		<if test="search_date != null and search_date != '0-0'">
			AND TO_CHAR(QUESTION_DATE, 'yyyy-MM') = #{search_date}
		</if>
		<if test="answer_status != null and answer_status != ''">
			AND ANSWER_STATUS = #{answer_status}
		</if>
  	</sql>
  	<sql id="product_search">
		<if test="list_category != null and list_category != ''">
			AND LIST_CATEGORY = #{list_category}
		</if>
		<if test="list_product != null and list_product != ''">
			AND LIST_PRODUCT LIKE '%' || #{list_product} || '%'
		</if>
		<if test="list_artist != null and list_artist != ''">
			AND LIST_ARTIST LIKE '%' || #{list_artist} || '%'
		</if>
  	</sql>
</mapper>